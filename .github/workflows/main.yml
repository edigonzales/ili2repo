name: ili2repo CI

on: 
  push:
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  build-jvm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica' 
          java-version: '17'
          
      - name: Build app with Gradle
        id: buildJvm
        run: |
          ./gradlew clean app:build
          ls -la app/build/libs/
          ls -la app/build/distributions/

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: reports-jvm
          path: app/build/reports/tests/

      - name: 'Upload build artifact'
        if: always() && (steps.buildJvm.outcome == 'success')
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-jvm
          path: |
            app/build/libs/*.zip

  build-native:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.2.0'
          java-version: '17'
          components: 'native-image'
          #native-image-musl: 'true'
          cache: 'gradle'
          #github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build native image
        run: |
          ./gradlew nativeTest
          ./gradlew nativeCompile

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: reports-native
          path: app/build/reports/tests/

  fubar:
    needs: [build-jvm, build-native]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run a script
        run: |
          pwd
          ls -la


      # - name: Build app with Gradle
      #   run: ./gradlew clean app:build -i

      # - uses: actions/upload-artifact@v2
      #   if: ${{ failure() }}
      #   with:
      #     name: reports
      #     path: app/build/reports/tests/

      # - name: Decode key ring file
      #   if: ${{ success() && github.ref == 'refs/heads/main'}}
      #   run: |
      #     echo "${{secrets.SIGNING_SECRET_KEY_RING_FILE}}" > ~/.gradle/sonatype_upload.gpg.b64
      #     base64 -d ~/.gradle/sonatype_upload.gpg.b64 > ~/.gradle/sonatype_upload.gpg

      # - name: Publish library jar file
      #   if: ${{ success() && github.ref == 'refs/heads/main'}}
      #   run: ./gradlew -i lib:publishToSonatype closeAndReleaseSonatypeStagingRepository -Psigning.keyId=${{secrets.SIGNING_KEY_ID}} -Psigning.password=${{secrets.SIGNING_PASSWORD}} -Psigning.secretKeyRingFile=$(echo ~/.gradle/sonatype_upload.gpg)
      #   env:
      #     OSSRH_USERNAME: ${{secrets.OSSRH_USERNAME}}
      #     OSSRH_PASSWORD: ${{secrets.OSSRH_PASSWORD}} 

      # - name: Release cli
      #   run: |
      #     ./gradlew -i app:jreleaserRelease
      #   env:
      #     JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   if: ${{ success() && github.ref == 'refs/heads/main'}}
